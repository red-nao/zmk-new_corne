#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LCTRL>, <&kp ESC>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&kp TAB     &kp Q  &kp W  &kp E     &kp R  &kp T                               &kp UP                &kp Y      &kp U      &kp I      &kp O    &kp P     &kp BACKSLASH
&td0        &kp A  &kp S  &kp D     &kp F  &kp G                     &kp LEFT  &kp ENTER  &kp RIGHT  &kp H      &kp J      &kp K      &kp L    &kp SEMI  &kp SQT
&kp LSHIFT  &kp Z  &kp X  &kp C     &kp V  &kp B        &kp SPACE              &kp DOWN              &kp N      &kp M      &kp COMMA  &kp DOT  &kp FSLH  &kp RSHIFT
                          &kp LGUI  &mo 1  &lt 2 SPACE                                               &kp ENTER  &kp RCTRL  &kp RALT
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        lower_layer {
            display-name = "NUMBER & SYMBOL";
            bindings = <
&trans  &kp N1     &kp N2     &kp N3     &kp N4    &kp N5                                   &mmv MOVE_UP                     &kp N6     &kp N7    &kp N8         &kp N9    &kp N0    &kp BSPC
&trans  &kp EXCL   &kp AT     &kp HASH   &kp DLLR  &kp PRCNT                &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp CARET  &kp AMPS  &kp STAR       &kp LPAR  &kp RPAR  &kp BACKSLASH
&trans  &kp MINUS  &kp UNDER  &kp EQUAL  &kp PLUS  &kp GRAVE  &kp C_MUTE                    &mmv MOVE_DOWN                   &kp TILDE  &kp LBKT  &kp RBKT       &kp LBRC  &kp RBRC  &kp PIPE
                              &trans     &trans    &trans                                                                    &trans     &kp DEL   &kp BACKSPACE
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_2 {
            display-name = "Fn";
            bindings = <
&trans      &kp F1        &kp F2        &kp F3        &kp F4        &kp F5                                      &mmv MOVE_UP                     &kp F6       &kp F7         &kp F8         &kp F9        &kp F10       &kp F11
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &out OUT_BLE  &out OUT_USB                &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &trans       &kp C_BRI_DEC  &kp C_BRI_INC  &kp C_VOL_DN  &kp C_VOL_UP  &kp F12
&sys_reset  &trans        &trans        &trans        &trans        &bootloader   &kp C_MUTE                    &mmv MOVE_DOWN                   &bootloader  &trans         &trans         &trans        &trans        &sys_reset
                                        &trans        &trans        &trans                                                                       &trans       &trans         &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };
    };
};
